#<-><-><-><-><-><-><-><-><-><-><-><-><-><-><-><-><-><-><-><-><-><->#
#               Klasy przechowuj¹ce wa¿ne zmienne                  #
#<-><-><-><-><-><-><-><-><-><-><-><-><-><-><-><-><-><-><-><-><-><->#

#---<>---<>---<>---<>---<>---<>---<>---<>---#
#                   MODU£Y                  #
#---<>---<>---<>---<>---<>---<>---<>---<>---#

module InI_1

              #HP,  MAX_HP, REGEN_HP, MP,  MAX_MP, REGEN_MP, EXP, MAX_EXP, ATK, DEF, EVA%, CRT, CRT% 
  I1_player = [100, 100,    10,       50,  50,     10,       0,   100,     5,   0,   5,    10,   0]
  I1_enemy1 = [10,  10 ,    0,        0,   0,      10,       5,   0,       10,  5,   0,    20,   1]
end
           #:--:--:--:--:--:--:--:--:--:--:--:--:--:--:#
           #             Klasa dziedziczona            #
           #:--:--:--:--:--:--:--:--:--:--:--:--:--:--:#
class Obj
  
  #KONSTRUKTOR
  def initialize(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13)
    @hp       = arg1
    @max_hp   = arg2
    @regen_hp = arg3
    @mp       = arg4
    @max_mp   = arg5
    @regen_mp = arg6
    @exp      = arg7
    @max_exp  = arg8
    
    @atack           = arg9
    @defense         = arg10
    @evasion         = arg11
    @critical        = arg12
    @critical_chance = arg13
    
    @dead_controler  = true
  end
  
  #GETTERY
  def get_hp()              return @hp       end
  def get_max_hp()          return @max_hp   end
  def get_regeneration_hp() return @regen_hp end
  def get_mp()              return @mp       end
  def get_max_mp()          return @max_mp   end
  def get_regeneration_mp() return @regen_mp end
  def get_exp()             return @exp      end
  def get_max_exp()         return @max_exp  end
    
  #SETTERY
  def set_hp(arg)              @hp       = arg end
  def set_max_hp(arg)          @max_hp   = arg end
  def set_regeneration_hp(arg) @regen_hp = arg end
  def set_mp(arg)              @mp       = arg end
  def set_max_mp(arg)          @max_mp   = arg end
  def set_regeneration_mp(arg) @regen_mp = arg end
  def set_exp(arg)             @exp      = arg end
  def set_max_exp(arg)         @max_exp  = arg end
  
  #METODY
  #Regeneracja zdrowia
  def regeneration_hp()
    if @dead_controler
      if @hp < @max_hp
        @hp += @regen_hp
      end
      if @hp > @max_hp
        @hp = @max_hp
      end
    end
  end
  
  #Regeneracja magii
  def regeneration_mp()
    if @mp < @max_mp
      @mp += @regen_mp
    end
    if @mp > @max_mp
      @mp = @max_mp
    end
  end
  
  #Zadawane obra¿enia
  def inflict_damage()
    random = rand(100)+1
    if random < @critical_chance
      return @critical
    else
      return @atack
    end
  end
  
  #Otrzymane obra¿enia
  def receive_damage(arg)
    @hp -= arg*(100-@evasion)/100
    if @hp < 0
      @hp = 0
    end
  end
  
  #Utrata magii
  def loss_magic(arg)
    @mp -= arg;
    if @mp < 0
      @mp = 0
    end
  end
  
  #DESTRUKTOR
  def dispose()
  end
  
end

           #:--:--:--:--:--:--:--:--:--:--:--:--:--:--:#
           #                Klasa gracz                #
           #:--:--:--:--:--:--:--:--:--:--:--:--:--:--:#
class Gracz < Obj
  
  #KONSTRUKTOR
  def initialize()
    super(*InI_1::I1_player)
    @max_exp_changer = @max_exp
  end
  
  #METODY
  #skille
  def skill_1
  end
  
  def skill_2
  end
  
  def skill_3
  end
  
  def skill_4
  end
  
  def skill_5
  end
  
  def awans()
    if @exp >= @max_exp
      @exp -= @max_exp
      @max_exp_changer += 50
      @max_exp += @max_exp_changer
      
      @hp += 10
      @mp += 10
      
      
      $game_player.animation_id = 110
    end
  end
  
  #zgon
  def dead()
    if @hp <= 0
      @dead_controler = false
      $game_map.screen.pictures[51].move(0, 21, 21, 101, 100, 255, 0, 20)
      $game_map.interpreter.wait(20)
      SceneManager.goto(Scene_Gameover)
    end
  end
  
  

  #DESTRUKTOR
  def dispose()
  end
  
end

           #:--:--:--:--:--:--:--:--:--:--:--:--:--:--:#
           #             Klasa przeciwnik              #
           #:--:--:--:--:--:--:--:--:--:--:--:--:--:--:#
class Enemy1 < Obj
  
  #KONSTRUKTOR
  def initialize()
    super(*InI_1::I1_enemy1)
  end
  
  
  #Regeneracja zdrowia
    #nadpis
  def regeneration_hp()
  end
  
  #Regeneracja magii
    #nadpis
  def regeneration_mp()
  end
  
  #DESTRUKTOR
  def dispose()
  end
  
end